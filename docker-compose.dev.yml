version: "3.9"

services:
  backend:
    container_name: backend
    image: backend-compose-kupipodary
    build:
      context: backend
      dockerfile: Dockerfile
      target: development
    ports:
      - "3001:3001"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network-dev
    volumes:
      - ./backend:/app
      - /app/node_modules

  db:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network-dev

  frontend:
    container_name: frontend
    image: frontend-compose-kupipodary
    restart: always
    networks:
      - frontend-network-dev
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"

networks:
  app-network-dev:
    driver: bridge

  frontend-network-dev:
    driver: bridge

volumes:
  postgres_data:
    driver: local
